
    :: Dependencies Injection in Spring
    - เราต้องบอก Spring ว่ามี class ที่เราต้องการให้ spring ไปทำการ new ไว้ แล้วเมื่อไหร่ก็ตามที่มี class ที่ต้องการเรียกใช้ class เหล่านั้น
    ให้ทำการ referance จาก class ที่ต้องการเรียกใช้ไปหาตำแหน่งใน Memory ที่ class ที่ถูกเรียกใช้ถูก new ไว้

    :: Spring Dependencies
    > spring-context
        - ใช้ในการจัดการกับ Bean ใน spring โดยจะทำให้สามารถใช้งาน Dependencies Injection และ Inversion of Control
        - จะทำงานเมื่อ application start โดยจะทำการโหลด Bean ทุก ๆ อันให้กับเรา
        - Bean คือ class ที่ถูกจัดการโดย spring-context
        - ApplicationContext เป็นที่รวทของ Bean และสิ่งที่จำเป็นในการสร้างและจัดวางวงจรของโปรแกรม

    :: Configuration bean in XML
    -> <Beans></Beans> เป็น parent ของการตั้งค่า bean ทั้งหมด
    -> <bean></bean> เป็นการระบุว่า class อะไรที่เราต้องการให้ spring จัดการ โดยสามารถระบุได้ดังนี้
        - id        : เป็น id ของ bean 
        - class     : เป็นการระบุ class ที่ต้องการให้ spring-context จัดการ
    -> <property></property> เป็นการตั้งค่า prop ของ class ว่าต้องการให้ spring-context ใส่ value หรือ referance ลงไป
        ตัวอย่าง
            <property name="qualification" value="MBBS" />
            <property name="nurse" ref="nurse"/>
    -> <constructor-arg></constructor-arg> เป็นการระบุ value ลงไปผ่าน constructor
    -> <context:component-scan base-package="demo" /> เป็นการสั่งให้ spring-context ไปค้นหา class ที่ระบุ annotation ว่าเป็น bean ทั้งหมด
    ใน base-package ที่ระบุ

    :: Annotation
    @Component
    - level: class
    - เป็น annotation บอกว่า class นี้เป็น Bean เพื่อให้ spring-context นำไปสร้าง instance สำหรับ referance

    @Configuration
    - level: class
    - Annotation ที่บอก spring ว่าใช้สำหรับกำหนดค่าให้กับ Spring Container เพื่อตั้งค่า Bean

    @ComponentScan
    - level: class
    - annotation สำหรับบอก spring ว่าให้เข้าไปค้นหาทุก ๆ class ที่เป็น Bean
    ใน package แล้วนำมาสร้าง instance สำหรับ referance

    @Bean
    - level: method
    - ใช้ระบุว่าเป็น method ที่จะสร้างและส่งคืน object ที่จะถูกจัดการโดย Spring Container และนำไปเก็บใน Spring Application Context
    ทำให้เราไม่จำเป็นต้องใช้ ComponentScan เพื่อให้ spring เข้าไปค้นหา bean เอง


    *** Default Bean จะถูกสร้างแบบ Singleton Scoped คือถูกสร้างแค่ครั้งเดียวและใช้งานได้ซ้ำ ๆ  ***

    :: Scoped
    > singleton
        spring จะสร้าง bean แค่ 1 instance

    > prototype
        สร้าง bean ใหม่ทุกครั้งที่ถูกเรียกใช้ ไม่ได้ถูกจะเก็บไว้ใน ApplicationContext เหมือน Singleton

    > request
        ใช้ใน Spring MVC, จะสร้าง bean ใหม่ทุกครั้งที่มี Http Request

    > session
        ใช้ใน Spring MVC, จะสร้าง bean ใหม่ทุกครั้งที่มี Http Session

    > application 
        ใช้ใน Spring MVC, จะสร้าง bean ใหม่ทุกครั้งที่มี ApplicationContext ใหม่

    > GlobalSession

    *** BeanNameAware เป็น class ใช้สำหรับสืบทอดความสามารถของ method ที่จะถูกเรียกใช้งานทันทีเมื่อ Bean ของ class นั้นถูกสร้างขึ้น ***
